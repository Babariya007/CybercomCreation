//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AddressBookCS : DbContext
    {
        public AddressBookCS()
            : base("name=AddressBookCS")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Contact> Contact { get; set; }
        public virtual DbSet<ContactCategory> ContactCategory { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<MasterUser> MasterUser { get; set; }
        public virtual DbSet<State> State { get; set; }
    
        public virtual int PR_City_DeleteByPK(Nullable<int> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_City_DeleteByPK", cityIDParameter);
        }
    
        public virtual int PR_City_Insert(Nullable<int> stateID, string cityName, string pinCode, string sTDCode, Nullable<int> userID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var sTDCodeParameter = sTDCode != null ?
                new ObjectParameter("STDCode", sTDCode) :
                new ObjectParameter("STDCode", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_City_Insert", stateIDParameter, cityNameParameter, pinCodeParameter, sTDCodeParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_City_SelectAll_Result> PR_City_SelectAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_City_SelectAll_Result>("PR_City_SelectAll", userIDParameter);
        }
    
        public virtual ObjectResult<PR_City_SelectByPK_Result> PR_City_SelectByPK(Nullable<int> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_City_SelectByPK_Result>("PR_City_SelectByPK", cityIDParameter);
        }
    
        public virtual ObjectResult<PR_City_SelectDropDownList_Result> PR_City_SelectDropDownList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_City_SelectDropDownList_Result>("PR_City_SelectDropDownList");
        }
    
        public virtual int PR_City_UpdateByPK(Nullable<int> cityID, Nullable<int> stateID, string cityName, string pincode, string sTDcode)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var sTDcodeParameter = sTDcode != null ?
                new ObjectParameter("STDcode", sTDcode) :
                new ObjectParameter("STDcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_City_UpdateByPK", cityIDParameter, stateIDParameter, cityNameParameter, pincodeParameter, sTDcodeParameter);
        }
    
        public virtual int PR_Contact_DeleteByPK(Nullable<int> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Contact_DeleteByPK", contactIDParameter);
        }
    
        public virtual int PR_Contact_Insert(Nullable<int> contactCategoryID, string contactName, string address, string pincode, Nullable<int> cityID, Nullable<int> stateID, Nullable<int> countryID, string emailAddress, string mobileNo, string faceBookID, string linkedInID, string profileImagePath, Nullable<System.DateTime> creationDate, Nullable<int> userID)
        {
            var contactCategoryIDParameter = contactCategoryID.HasValue ?
                new ObjectParameter("ContactCategoryID", contactCategoryID) :
                new ObjectParameter("ContactCategoryID", typeof(int));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var faceBookIDParameter = faceBookID != null ?
                new ObjectParameter("FaceBookID", faceBookID) :
                new ObjectParameter("FaceBookID", typeof(string));
    
            var linkedInIDParameter = linkedInID != null ?
                new ObjectParameter("LinkedInID", linkedInID) :
                new ObjectParameter("LinkedInID", typeof(string));
    
            var profileImagePathParameter = profileImagePath != null ?
                new ObjectParameter("ProfileImagePath", profileImagePath) :
                new ObjectParameter("ProfileImagePath", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Contact_Insert", contactCategoryIDParameter, contactNameParameter, addressParameter, pincodeParameter, cityIDParameter, stateIDParameter, countryIDParameter, emailAddressParameter, mobileNoParameter, faceBookIDParameter, linkedInIDParameter, profileImagePathParameter, creationDateParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_Contact_SelectAll_Result> PR_Contact_SelectAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Contact_SelectAll_Result>("PR_Contact_SelectAll", userIDParameter);
        }
    
        public virtual ObjectResult<PR_Contact_SelectByPK_Result> PR_Contact_SelectByPK(Nullable<int> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Contact_SelectByPK_Result>("PR_Contact_SelectByPK", contactIDParameter);
        }
    
        public virtual int PR_Contact_UpdateByPK(Nullable<int> contactID, Nullable<int> contactCategoryID, string contactName, string address, string pincode, Nullable<int> cityID, Nullable<int> stateID, Nullable<int> countryID, string emailAddress, string mobileNo, string faceBookID, string linkedInID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            var contactCategoryIDParameter = contactCategoryID.HasValue ?
                new ObjectParameter("ContactCategoryID", contactCategoryID) :
                new ObjectParameter("ContactCategoryID", typeof(int));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var faceBookIDParameter = faceBookID != null ?
                new ObjectParameter("FaceBookID", faceBookID) :
                new ObjectParameter("FaceBookID", typeof(string));
    
            var linkedInIDParameter = linkedInID != null ?
                new ObjectParameter("LinkedInID", linkedInID) :
                new ObjectParameter("LinkedInID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Contact_UpdateByPK", contactIDParameter, contactCategoryIDParameter, contactNameParameter, addressParameter, pincodeParameter, cityIDParameter, stateIDParameter, countryIDParameter, emailAddressParameter, mobileNoParameter, faceBookIDParameter, linkedInIDParameter);
        }
    
        public virtual int PR_ContactCategory_DeleteByPK(Nullable<int> contactCategoryID)
        {
            var contactCategoryIDParameter = contactCategoryID.HasValue ?
                new ObjectParameter("ContactCategoryID", contactCategoryID) :
                new ObjectParameter("ContactCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ContactCategory_DeleteByPK", contactCategoryIDParameter);
        }
    
        public virtual int PR_ContactCategory_Insert(string contactCategoryName, Nullable<System.DateTime> creationDate, Nullable<int> userID)
        {
            var contactCategoryNameParameter = contactCategoryName != null ?
                new ObjectParameter("ContactCategoryName", contactCategoryName) :
                new ObjectParameter("ContactCategoryName", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ContactCategory_Insert", contactCategoryNameParameter, creationDateParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_ContactCategory_SelectAll_Result> PR_ContactCategory_SelectAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_ContactCategory_SelectAll_Result>("PR_ContactCategory_SelectAll", userIDParameter);
        }
    
        public virtual ObjectResult<PR_ContactCategory_SelectByPK_Result> PR_ContactCategory_SelectByPK(Nullable<int> contactCategoryID)
        {
            var contactCategoryIDParameter = contactCategoryID.HasValue ?
                new ObjectParameter("ContactCategoryID", contactCategoryID) :
                new ObjectParameter("ContactCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_ContactCategory_SelectByPK_Result>("PR_ContactCategory_SelectByPK", contactCategoryIDParameter);
        }
    
        public virtual ObjectResult<PR_ContactCategory_SelectDropDownList_Result> PR_ContactCategory_SelectDropDownList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_ContactCategory_SelectDropDownList_Result>("PR_ContactCategory_SelectDropDownList");
        }
    
        public virtual int PR_ContactCategory_UpdateByPK(Nullable<int> contactCategoryID, string contactCategoryName, Nullable<System.DateTime> creationDate)
        {
            var contactCategoryIDParameter = contactCategoryID.HasValue ?
                new ObjectParameter("ContactCategoryID", contactCategoryID) :
                new ObjectParameter("ContactCategoryID", typeof(int));
    
            var contactCategoryNameParameter = contactCategoryName != null ?
                new ObjectParameter("ContactCategoryName", contactCategoryName) :
                new ObjectParameter("ContactCategoryName", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_ContactCategory_UpdateByPK", contactCategoryIDParameter, contactCategoryNameParameter, creationDateParameter);
        }
    
        public virtual int PR_Country_DeleteByPK(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Country_DeleteByPK", countryIDParameter);
        }
    
        public virtual int PR_Country_Insert(string countryName, string countryCode, Nullable<System.DateTime> creationDate, Nullable<int> userID)
        {
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Country_Insert", countryNameParameter, countryCodeParameter, creationDateParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_Country_SelectAll_Result> PR_Country_SelectAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Country_SelectAll_Result>("PR_Country_SelectAll", userIDParameter);
        }
    
        public virtual ObjectResult<PR_Country_SelectByPK_Result> PR_Country_SelectByPK(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Country_SelectByPK_Result>("PR_Country_SelectByPK", countryIDParameter);
        }
    
        public virtual ObjectResult<PR_Country_SelectDropDownList_Result> PR_Country_SelectDropDownList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_Country_SelectDropDownList_Result>("PR_Country_SelectDropDownList");
        }
    
        public virtual int PR_Country_UpdateByPK(Nullable<int> countryID, string countryName, string countryCode)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_Country_UpdateByPK", countryIDParameter, countryNameParameter, countryCodeParameter);
        }
    
        public virtual int PR_State_DeleteByPK(Nullable<int> stateID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_State_DeleteByPK", stateIDParameter);
        }
    
        public virtual int PR_State_Insert(Nullable<int> countryID, string stateName, Nullable<int> userID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_State_Insert", countryIDParameter, stateNameParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PR_State_SelectAll_Result> PR_State_SelectAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_State_SelectAll_Result>("PR_State_SelectAll", userIDParameter);
        }
    
        public virtual ObjectResult<PR_State_SelectByCountryID_Result> PR_State_SelectByCountryID(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_State_SelectByCountryID_Result>("PR_State_SelectByCountryID", countryIDParameter);
        }
    
        public virtual ObjectResult<PR_State_SelectByPK_Result> PR_State_SelectByPK(Nullable<int> stateID)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_State_SelectByPK_Result>("PR_State_SelectByPK", stateIDParameter);
        }
    
        public virtual ObjectResult<PR_State_SelectDropDownList_Result> PR_State_SelectDropDownList(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_State_SelectDropDownList_Result>("PR_State_SelectDropDownList", userIDParameter);
        }
    
        public virtual int PR_State_UpdateByPK(Nullable<int> stateID, Nullable<int> countryID, string stateName)
        {
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var stateNameParameter = stateName != null ?
                new ObjectParameter("StateName", stateName) :
                new ObjectParameter("StateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_State_UpdateByPK", stateIDParameter, countryIDParameter, stateNameParameter);
        }
    }
}
