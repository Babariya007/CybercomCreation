@using PagedList.Mvc;
@using PagedList;
@model IPagedList<eCommerce_Model.ProductMasterModel>
@*@model eCommerce_Model.ProductMasterModel*@

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@{
    ViewBag.Title = "Product List";
}

<br />
<h2>ProductList</h2>

<p style="text-align:right">
    @Html.ActionLink("Create New", "Create", new { @controller = "ProductMaster" }, new { @class = "btn btn-primary" })
</p>
<table class="table table-striped" id="ProductInfo">
    <thead>
        <tr>
            <th>
                SrNo
            </th>
            <th>
                Action
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProductQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProductDetails)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ProductImage)
            </th>
        </tr>
    </thead>
    <tbody>
        @{int SrNo = 1; }
        @foreach (var item in (IEnumerable<eCommerce_Model.ProductMasterModel>)ViewData["Product"])
        {
            <tr>
                <td>
                    @SrNo
                </td>
                @{
                    SrNo++;
                }
                <td>
                    <a href="@Url.Action("Create", "ProductMaster", new { id = item.ProductID })" title="Edit"><i class="fa fa-edit"></i></a> &nbsp;
                    <a href="@Url.Action("Delete", "ProductMaster", new { id = item.ProductID })" title="Delete" onclick="return confirm('Are you sure you want to delete this item?');"><i class="fa fa-trash"></i></a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDetails)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductPrice)
                </td>
                <td>
                    <img src="@Url.Content(item.ProductImage)" style="width:150px; height:150px" />
                </td>

            </tr>
        }
    </tbody>

    @*@Html.PagedListPager(Model, page => Url.Action("ProductList", new { page }), PagedListRenderOptions.PageNumbersOnly)*@

</table>

@*<link href="//cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css" rel="stylesheet" />
    @section script {
        <script src="~/Scripts/jquery-3.6.0.min.js"></script>
        <script src="//cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#ProductInfo').DataTable({
                    "ajax": {
                        "url": "/ProductMaster/ProductList",
                        "type": "POST",
                        "dataType": "JSON"
                    },
                    "columns": [
                        { "data": "ProductName", "name": "ProductName" },
                        { "data": "ProductQuantity", "name": "ProductQuantity" },
                        { "data": "ProductDetails", "name": "ProductDetails" },
                        { "data": "ProductPrice", "name": "ProductPrice" },
                        { "data": "ProductImage", "name": "ProductImage" }
                    ],
                    "serverSide": true,
                    "order": [0, "asc"],
                    "processing": true


                });
            });
        </script>*@
